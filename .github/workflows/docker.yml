name: docker

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: docker-${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: backend
            dockerfile: Dockerfile.api
            name_suffix: '-api'
          - name: frontend
            dockerfile: Dockerfile.web
            name_suffix: '-web'
          - name: all-in-one
            dockerfile: Dockerfile
            name_suffix: ''

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute image variables
        id: vars
        shell: bash
        run: |
          repo="${GITHUB_REPOSITORY##*/}"
          echo "repo_lower=${repo,,}" >> "$GITHUB_OUTPUT"
          ns="${{ secrets.DOCKERHUB_NAMESPACE }}"
          if [ -z "$ns" ]; then ns="${{ secrets.DOCKERHUB_USERNAME }}"; fi
          echo "namespace_lower=${ns,,}" >> "$GITHUB_OUTPUT"
          if [ -n "${{ vars.AWS_ACCOUNT_ID }}" ]; then
            echo "ecr_registry=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com" >> "$GITHUB_OUTPUT"
            echo "push_to_ecr=true" >> "$GITHUB_OUTPUT"
          else
            echo "push_to_ecr=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Assemble tags
        id: tag_list
        shell: bash
        env:
          PUSH_TO_ECR: ${{ steps.vars.outputs.push_to_ecr }}
          ECR_REGISTRY: ${{ steps.vars.outputs.ecr_registry }}
          NAMESPACE: ${{ steps.vars.outputs.namespace_lower }}
          REPO: ${{ steps.vars.outputs.repo_lower }}
          NAME_SUFFIX: ${{ matrix.name_suffix }}
          SHA: ${{ github.sha }}
        run: |
          tags=()
          if [ "$PUSH_TO_ECR" = "true" ]; then
            tags+=("$ECR_REGISTRY/$REPO$NAME_SUFFIX:latest")
            tags+=("$ECR_REGISTRY/$REPO$NAME_SUFFIX:$SHA")
          fi
          if [ -n "$NAMESPACE" ]; then
            tags+=("docker.io/$NAMESPACE/$REPO$NAME_SUFFIX:latest")
            tags+=("docker.io/$NAMESPACE/$REPO$NAME_SUFFIX:$SHA")
          fi
          if [ ${#tags[@]} -eq 0 ]; then
            echo "No registry configured for push" >&2
            exit 1
          fi
          {
            printf 'tags<<EOF\n'
            printf '%s\n' "${tags[@]}"
            printf 'EOF\n'
          } >> "$GITHUB_OUTPUT"

      - name: Configure AWS credentials (OIDC)
        if: ${{ steps.vars.outputs.push_to_ecr == 'true' && secrets.AWS_GITHUB_OIDC_ROLE_ARN != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure AWS credentials (access keys)
        if: ${{ steps.vars.outputs.push_to_ecr == 'true' && secrets.AWS_GITHUB_OIDC_ROLE_ARN == '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        if: ${{ steps.vars.outputs.push_to_ecr == 'true' }}
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private

      - name: Build ${{ matrix.name }} (PR; no push)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.dockerfile }}
          push: false
          platforms: linux/amd64
          tags: ${{ steps.vars.outputs.repo_lower }}${{ matrix.name_suffix }}:pr-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Login to Docker Hub
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.vars.outputs.namespace_lower != '' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.name }} (main)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.tag_list.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
